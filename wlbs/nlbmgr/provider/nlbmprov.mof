 // NlbsNicProv.MOF
// Copyright (c) 1999 Microsoft Corporation
// Generated by Microsoft WBEM Code Generation Engine
//
// TO DO: If this class is intended to be created in a namespace 
//        other than the default (root\default), you should add 
//        the #pragma namespace command here.  If these classes 
//        are going into your own namespace, consider creating 
//        the namespace here as well.  See CIMWIN32.MOF for an 
//        example of how to create a namespace.  Also, consider
//        combining this mof with the mof the defines the class
//        that this provider provides.
//
//===================================================================
// History:
// --------
// 
//
// Revised by : mhakim
// Date       : 02-12-01
// Reason     : Added password support.

#pragma namespace ("\\\\.\\Root\\microsoftnlb")

//*************************************************************
//***   Registers Framework Provider                        ***
//*************************************************************
instance of __Win32Provider as $P
{
    Name = "NlbsNicProv";
    ClsId = "{4c97e0a8-c5ea-40fd-960d-7d6c987be0a6}";
    HostingModel = "NetworkServiceHost"; 
};

instance of __InstanceProviderRegistration
{
    Provider = $P;
    SupportsGet = TRUE;
    SupportsPut = TRUE;
    SupportsDelete = FALSE;
    SupportsEnumeration = TRUE;
    QuerySupportLevels = NULL;
};

instance of __MethodProviderRegistration
{
    Provider = $P;
};

[Dynamic, Provider ("NlbsNicProv")]
class NlbsNic
{

    [
	Implemented,  static,
	Description("Gets the list of GUIDs of adapters compatible with NLB"
                "and the number of adapters currently bound to NLB.")
	]
       uint32 GetCompatibleAdapterGuids(
                [OUT] String  AdapterGuids[], // "{......}"
                [OUT] uint32  NumBoundToNlb
                );

    [
	Implemented, static,
	Description("Gets extended cluster configuration information.")
	]
       uint32 GetClusterConfiguration(
                [IN]  String  AdapterGuid,
                [OUT] String  FriendlyName,
                [OUT] uint32  Generation,
                [OUT] String  NetworkAddresses[], // "10.1.1.1/255.0.0.0"
                [OUT] Boolean NLBBound,
                [OUT] Boolean DHCPEnabled,
                [OUT] String  ClusterNetworkAddress, // "10.1.1.1/255.0.0.0"
                [OUT] String  ClusterName,
                [OUT] String  TrafficMode, // UNICAST MULTICAST IGMPMULTICAST
                [OUT] String  PortRules[],
                [OUT] uint32  HostPriority,
                [OUT] String  DedicatedNetworkAddress, // "10.1.1.1/255.0.0.0"
                [OUT] uint32  ClusterModeOnStart,      // 0 : STOPPED, 1 : STARTED, 2 : SUSPENDED
                [OUT] Boolean PersistSuspendOnReboot,  
                [OUT] Boolean RemoteControlEnabled,
                [OUT] uint32  HashedRemoteControlPassword
                );

    [
	Implemented, static,
	Description("Asynchronously updates cluster configuration.")
	]
       uint32 UpdateClusterConfiguration(
                [IN] String  ClientDescription,
                [IN] String  AdapterGuid,
                [IN] uint32  Generation,
                [IN] Boolean PartialUpdate,

                [IN] Boolean AddDedicatedIp,
                [IN] Boolean AddClusterIps,
                [IN] Boolean CheckForAddressConflicts,

                [IN] String  NetworkAddresses[], // "10.1.1.1/255.255.255.255"
                [IN] Boolean NLBBound,
                [IN] String  ClusterNetworkAddress, // "10.1.1.1/255.0.0.0"
                [IN] String  ClusterName,
                [IN] String  TrafficMode, // UNICAST MULTICAST IGMPMULTICAST
                [IN] String  PortRules[],
                [IN] uint32  HostPriority,
                [IN] String  DedicatedNetworkAddress, // "10.1.1.1/255.0.0.0"
                [IN] uint32  ClusterModeOnStart,      // 0 : STOPPED, 1 : STARTED, 2 : SUSPENDED
                [IN] Boolean PersistSuspendOnReboot, 
                [IN] Boolean RemoteControlEnabled,
                [IN] String  RemoteControlPassword,
                [IN] uint32  HashedRemoteControlPassword,
                [OUT] uint32 NewGeneration,
                [OUT] String Log
                );

    [
	Implemented, static,
	Description("Queries status of a pending asynchronous cluster"
                " configuration update.")
	]
       uint32 QueryConfigurationUpdateStatus(
                [IN] String  AdapterGuid,
                [IN] uint32  Generation,
                [OUT] String Log
                );


    [
	Implemented, static,
	Description("Changes local operational status of cluster or port")
	]

        uint32 ControlCluster(
                [IN]   String AdapterGuid,
                [IN]   String VirtualIpAddress,
                [IN]   uint32 Port,
                [IN]   uint32 Operation,
                [OUT]  uint32 CurrentState,
                [OUT]  uint32 HostMap
                );
    
    [
	Implemented,  static,
	Description("Gets the current list of cluster members")
	]
        uint32 GetClusterMembers(
                [IN]  String  AdapterGuid,
                [OUT] String  HostIds[],
                [OUT] String  DedicatedIpAddresses[],
                [OUT] String  HostNames[]
                );

    [
	Implemented, static,
	Description("Registers a management application with NLB")
	]

        uint32 RegisterManagementApplication(
            [IN]  String ApplicationGuid,
            [IN]  String ApplicationName, 
            [IN]  String CompanyName,
            [OUT] String ExistingApplicationName,
            [OUT] String ExistingCompanyName
            );

    [
	Implemented, static,
	Description("Registers a management application with NLB")
	]

        uint32 UnregisterManagementApplication(
            [IN]  String ApplicationGuid
            );

};

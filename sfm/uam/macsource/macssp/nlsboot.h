/*++Copyright (c) 2001  Microsoft CorporationModule Name:    nlsboot.hAbstract:    This header is only need on Macintosh machines to build the Rtl routines.Author:    Michael J. Conrad (mconrad) 9/26/01Revision History:--*/#ifndef __NLSBOOT__#define __NLSBOOT__#ifdef MAC#ifdef SSP_TARGET_CARBON#include <Carbon/Carbon.h>#endif#include <bootdefs.h>#include <ntstatus.h>#include <crypt.h>#include <ntlmsspi.h>#endif////Define equivelant for RtlMoveMemory on mac//#define RtlMoveMemory(dest, source, length)		BlockMove(source, dest, length);#ifdef __cplusplusextern "C" {#endifNTSTATUSRtlAnsiStringToUnicodeString(    OUT PUNICODE_STRING DestinationString,    IN PCANSI_STRING SourceString,    IN BOOLEAN AllocateDestinationString    );    LONGRtlCompareUnicodeString(    IN PCUNICODE_STRING String1,    IN PCUNICODE_STRING String2,    IN BOOLEAN CaseInSensitive    );BOOLEANRtlEqualUnicodeString(    IN const UNICODE_STRING *String1,    IN const UNICODE_STRING *String2,    IN BOOLEAN CaseInSensitive    );VOIDRtlInitString(    OUT PSTRING DestinationString,    IN PCSZ SourceString OPTIONAL    );VOIDRtlInitUnicodeString(    OUT PUNICODE_STRING DestinationString,    IN PCWSTR SourceString OPTIONAL    );VOIDRtlInitAnsiString(    OUT PANSI_STRING DestinationString,    IN PCSTR SourceString OPTIONAL    );NTSTATUSRtlAppendUnicodeStringToString (    IN OUT PUNICODE_STRING Destination,    IN PCUNICODE_STRING Source    );NTSTATUSRtlAppendUnicodeToString (    IN PUNICODE_STRING Destination,    IN PCWSTR Source OPTIONAL    );WCHARRtlUpcaseUnicodeChar(    IN WCHAR SourceCharacter    );WCHARRtlAnsiCharToUnicodeChar(    IN OUT PUCHAR *SourceCharacter    );NTSTATUSRtlUpcaseUnicodeToMultiByteN(    OUT PCH MultiByteString,    IN ULONG MaxBytesInMultiByteString,    OUT PULONG BytesInMultiByteString OPTIONAL,    IN PWCH UnicodeString,    IN ULONG BytesInUnicodeString);NTSTATUSRtlMultiByteToUnicodeN(    OUT PWCH UnicodeString,    IN ULONG MaxBytesInUnicodeString,    OUT PULONG BytesInUnicodeString OPTIONAL,    IN PCSTR MultiByteString,    IN ULONG BytesInMultiByteString);NTSTATUSRtlUnicodeToMultiByteN(    OUT PCH MultiByteString,    IN ULONG MaxBytesInMultiByteString,    OUT PULONG BytesInMultiByteString OPTIONAL,    IN PWCH UnicodeString,    IN ULONG BytesInUnicodeString);#ifdef __cplusplus}#endif#endif //__NLSBOOT__